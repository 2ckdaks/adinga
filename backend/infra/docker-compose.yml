services:
  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: adinga
      MYSQL_USER: app
      MYSQL_PASSWORD: app
    command: ["--character-set-server=utf8mb4","--collation-server=utf8mb4_0900_ai_ci","--default-time-zone=+09:00"]
    ports: ["3307:3306"]  # 호스트에서 접속하려면 3307 사용(이미 3306 점유되어 있었음)

  redis:
    image: redis:7
    ports: ["6379:6379"]

  kafka:
    image: redpandadata/redpanda:latest
    command: ["redpanda","start","--mode=dev-container","--kafka-addr=0.0.0.0:9092","--advertise-kafka-addr=kafka:9092"]
    ports: ["9092:9092"]

  api-gateway:
    build:
      context: ../services/api-gateway
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
    ports:
      - "8000:8000"
    depends_on: [todo-service, redis]

  todo-service:
    build:
      context: ../services/todo-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "8201:8201"
    depends_on: [mysql, redis]

  location-event-service:
    build:
      context: ../services/location-event-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "8301:8301"
    depends_on: [kafka, redis]

  trigger-engine-service:
    build:
      context: ../services/trigger-engine-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "8401:8401"
    depends_on: [mysql, kafka, redis]

  notification-service:
    build:
      context: ../services/notification-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "8501:8501"
    depends_on: [kafka]