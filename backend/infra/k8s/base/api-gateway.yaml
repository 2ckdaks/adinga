apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
spec:
  replicas: 1
  selector:
    matchLabels: { app: api-gateway }
  template:
    metadata:
      labels: { app: api-gateway }
    spec:
      imagePullSecrets:
        - name: regcred
      containers:
        - name: api-gateway
          image: ghcr.io/2ckdaks/api-gateway:dev-20250907142802   # <- 방금 푸시한 TAG
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
          env:
            - name: SERVER_PORT
              value: "8000"
            - name: SECURITY_ENABLED
              value: "true"
            - name: SECURITY_DEV_TOKEN
              valueFrom:
                secretKeyRef:
                  name: gateway-secrets
                  key: dev-token
            - name: LOCATIONS_HOST
              value: "location-event-service"
            - name: LOCATIONS_PORT
              value: "8301"
            - name: NOTIFICATIONS_HOST
              value: "notification-service"
            - name: NOTIFICATIONS_PORT
              value: "8501"
---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
  annotations:
#    service.beta.kubernetes.io/aws-load-balancer-healthcheck-protocol: "http"
#    service.beta.kubernetes.io/aws-load-balancer-healthcheck-port: "traffic-port"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-protocol: "TCP"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-port: "traffic-port"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-path: "/actuator/health"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-interval: "10"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-timeout: "5"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-healthy-threshold: "2"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-unhealthy-threshold: "2"
spec:
  type: LoadBalancer
  selector:
    app: api-gateway
  ports:
    - name: http
      port: 80
      targetPort: 8000